name: remote ssh command
on: [push]
#   release:
#     types: [created]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v2
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
  asset-upload:
    name: Build
    runs-on: ubuntu-latest
    steps:
    # - name: Get release
    - name: 🚚 Get latest code
      uses: dsaltares/fetch-gh-release-asset@master
      with:
        repo: "dsaltares/godot-wild-jam-18"
        version: "tags/v0.1.18"
        file: "plague-linux.zip"
        target: "subdir/plague-linux.zip"
        token: ${{ secrets.TOKEN }}
        script: |
          ls -al
    
    - name: 📂 Sync files
      uses: wlixcc/SFTP-Deploy-Action@v1.0
      with:
        username: ${{ secrets.USERNAME }}
        server: ${{ secrets.HOST }}
        port: ${{ secrets.PORT }}
        ssh_private_key: ${{ secrets.KEY }}
        local_path: './subdir/*'
        remote_path: '/docker/${{ secrets.PROJECT_TYPE }}/${{ secrets.PROJECT_DIR }}/test'
        args: '-o ConnectTimeout=5'

  git-pull:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ secrets.PROJECT_TYPE }}/${{ secrets.PROJECT_DIR }}
          ls -al

name: '🚛 deploy'
description: '내가 지정한 호스트의 프로젝트 폴더 git pull origin develop! & Release deploy-src.tar 폴더 압축 해제 덮어쓰기'

inputs:
  # https://github.com/dsaltares/fetch-gh-release-asset/blob/master/action.yaml
  # 해당 액션 참고 
  repo:
    description: 'The `org/repo` containing the release.'
    required: false
    default: ''
  version:
    description: 'The release version to fetch from in the form `tags/<tag_name>` or `<release_id>`.'
    required: false
    default: 'latest'
  file:
    description: 'The name of the file to be downloaded.'
    required: true
  target:
    description: 'Target file path.'
    required: false
  token:
    description: 'The GitHub token. Typically this will be secrets.GITHUB_TOKEN'
    required: true
  # https://github.com/AEnterprise/rsync-deploy/blob/master/Dockerfile
  # 해당 참고
  DEPLOY_KEY:
    description: 'rsync ssh로 접속하기위한 ssh key'
    required: true
  SERVER_PORT:
    description: 'rsync port'
    require: true
  FOLDER:
    description: '연동할 폴더'
    require: true
    default: './'
  ARGS:
    description: 'rsync 추가 옵션'
    require: false
  SERVER_IP:
    description: 'rsync할 호스트 IP or Domain'
    require: true
  USERNAME:
    description: '호스트 접속 username'
    require: true
  SERVER_DESTINATION:
    description: '호스트 rsync할 폴더'
    require: true

runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.repo }}
    - ${{ inputs.version }}
    - ${{ inputs.file }}
    - ${{ inputs.target }}
    - ${{ inputs.token }}
    - ${{ inputs.DEPLOY_KEY }}
    - ${{ inputs.SERVER_PORT }}
    - ${{ inputs.FOLDER }}
    - ${{ inputs.SERVER_IP }}
    - ${{ inputs.USERNAME }}
    - ${{ inputs.SERVER_DESTINATION }}

outputs:
  version:
    description: 'The version of the release or tag'
  name:
    description: 'The name of the release'
  body:
    description: 'The body of the release'
